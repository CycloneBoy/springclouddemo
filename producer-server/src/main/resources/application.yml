server:
  port: 9003
spring:
  application:
    name: producer-server  #全部小写
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://47.106.251.161:3306/springclouddemo?characterEncoding=utf8&useSSL=false
    username: root
    password: 123456@sl
    type: com.alibaba.druid.pool.DruidDataSource

    druid:
      # 初始化大小 ，最大，最小
      initial-size: 10 #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      min-idle: 10     #最小连接池数量
      maxActive: 100   #最大连接池数量
      # 配置获取连接等待超时时间
      maxWait: 60000
      # 配置一个连接在池中的最小生存时间,单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      test-on-return: false
      # 打开 PSCache,并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      # 配置监控统计拦截的filters,去掉后监控界面sql将无法统计,'wall' 用于防火墙
      filters: stat,wall,log4j
      # 通过 connectProperties 属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.showSqlMillis=5000
      # 合并多个 DruidDataSource的监控数据
      # useGlobalDataSourceStat=true
      time-between-eviction-runs-millis: 60000
      max-pool-prepared-statement-per-connection-size: 20

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8000/eureka/
  instance:
    prefer-ip-address: true

info:
  app:
    name: @project.artifactId@
    encoding: @project.build.sourceEncoding@
    java:
      source: @java.version@
      target: @java.version@
